# predicates - all are unary (single argument), or compositions of others
fns:
  isEmail: /.*@.*/.test(s)
  isOverZero: x > 0
  isUnder150: x < 150
  isLiving: [isOverZero, isUnder150]
  isAdult: x > 17

# scalar types - the name is part of the prop/type
scalars:
  name       : string
  first-name : name
  last-name  : name
  email      : [string, isEmail]
  age        : [int, isLiving]
  adult-age  : [age, isAdult]

# you can define entities as well
entities:
  person:
    - first-name
    - last-name
    - age
    - email
